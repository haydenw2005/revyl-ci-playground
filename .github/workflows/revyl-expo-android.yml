name: Revyl Expo (EAS) → Publish pinned → Verify → Trigger tests

on:
  workflow_dispatch: # Manual trigger only for full builds

permissions:
  contents: read

jobs:
  expo-android:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.head.repo.full_name == github.repository
    env:
      REVYL_API_KEY: ${{ secrets.REVYL_API_KEY }}
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      VER: expo-${{ github.event_name == 'workflow_dispatch' && 'manual' || format('pr-{0}', github.event.number) }}-run-${{ github.run_number }}-${{ github.run_attempt }}
    steps:
      - uses: actions/checkout@v4

      - name: Checkout Revyl Actions
        uses: actions/checkout@v4
        with:
          repository: RevylAI/revyl-gh-action
          path: revyl-actions

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm
          cache-dependency-path: apps/expo-demo/package-lock.json

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install Dependencies
        working-directory: apps/expo-demo
        run: npm ci

      - name: Build on EAS
        working-directory: apps/expo-demo
        run: |
          echo "🚀 Building Android APK with EAS..."

          # Capture the build output to extract build ID
          BUILD_OUTPUT=$(eas build --platform android --non-interactive --no-wait 2>&1)
          echo "$BUILD_OUTPUT"

          # Extract build ID from the logs URL
          BUILD_ID=$(echo "$BUILD_OUTPUT" | grep -o 'builds/[a-f0-9-]*' | sed 's/builds\///' | head -1)
          echo "📱 Build started with ID: $BUILD_ID"

          if [ -n "$BUILD_ID" ]; then
            echo "✅ EAS build triggered successfully!"
            echo "🔗 Build logs: https://expo.dev/accounts/hxxw12/projects/revyl-playground/builds/$BUILD_ID"
            
            # For now, use placeholder until build completes
            # TODO: In production, wait for build completion or use webhooks
            BUILD_URL="https://httpbin.org/bytes/1024"
            echo "📱 Using placeholder URL (build in progress): $BUILD_URL"
          else
            echo "❌ Failed to extract build ID"
            BUILD_URL="https://httpbin.org/bytes/1024"
          fi

          echo "BUILD_URL=$BUILD_URL" >> $GITHUB_ENV

      - name: Upload to Revyl (from EAS URL)
        uses: ./revyl-actions/actions/upload-build
        with:
          build-var-id: ${{ vars.REVYL_BUILD_VAR_ANDROID }}
          version: ${{ env.VER }}
          expo-url: ${{ env.BUILD_URL }}
          expo-headers: '{"Authorization": "Bearer ${{ secrets.EXPO_TOKEN }}"}'
          metadata: |
            {
              "platform": "Android",
              "app_id": "com.revyl.demo.expo",
              "build_system": "eas",
              "expo_build_id": "${{ env.BUILD_ID }}",
              "ci_run_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "commit_sha": "${{ github.sha }}",
              "pr_number": ${{ github.event.number || 'null' }},
              "branch": "${{ github.ref_name }}"
            }

      - name: Verify Resolution
        uses: ./revyl-actions/actions/verify-resolution
        with:
          build-var-id: ${{ vars.REVYL_BUILD_VAR_ANDROID }}
          version: ${{ env.VER }}

      - name: Trigger Tests (placeholder)
        run: |
          echo "✅ Would trigger test run with version: ${{ env.VER }}"
          echo "This step would use a trigger-test action when available"
